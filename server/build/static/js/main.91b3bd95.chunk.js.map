{"version":3,"sources":["index.js"],"names":["client","W3CWebsocket","DehlaPakad","props","handleUName","e","setState","userName","target","value","handleTeam","team","handleLogin","state","send","JSON","stringify","type","alert","handleNextGame","gameCount","handleCardClick","turn","userId","next","index","cards","indexOf","splice","currentSuit","move","trump","substring","roundStartsWith","renderCards","card","suit","i","length","push","className","style","cursor","onClick","renderBoard","board","curr","1","2","3","4","currentRoundMoves","currentGameWinner","previousRoundWinner","hands","team1points","team2points","calcRoundWinner","highest","winner","Team1hand","slice","Team2hand","pile","parseInt","concat","calcGameWinner","temp1","temp2","isLoggedIn","readyToStart","onopen","console","log","onmessage","message","dataFromServer","parse","data","id","thisRound","setTimeout","this","placeholder","onChange","hidden","disabled","selected","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.91b3bd95.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {w3cwebsocket as W3CWebsocket} from 'websocket';\n\nconst client = new W3CWebsocket ('ws://192.168.0.199:8000');\n\nclass DehlaPakad extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {userId: 0,\n                  userName: '',\n                  team: 0,\n                  cards: [],\n                  turn: 0,\n                  roundStartsWith: 0,\n                  currentSuit: 'NA',\n                  currentRoundMoves: {},\n                  pile: [],\n                  hands: {1: [], 2: []},\n                  trump: 'NA',\n                  previousRoundWinner: 0,\n                  isLoggedIn: false,\n                  readyToStart: false,\n                  team1points: 0,\n                  team2points: 0,\n                  gameCount: 0,\n                  currentGameWinner: 0};\n  }\n\n  handleUName = (e) => {\n    this.setState({userName: e.target.value});\n  }\n\n  handleTeam = (e) => {\n    this.setState({team: e.target.value});\n  }\n\n  handleLogin = () => {\n    if(this.state.userName !== '' && this.state.team != 0){\n      client.send(JSON.stringify({\n        type: 'login',\n        userName: this.state.userName,\n        team: this.state.team\n      }));\n    }\n    else{\n      alert('Please fill all the details');\n    }\n  }\n\n  handleNextGame = () => {\n    client.send(JSON.stringify({\n      type: 'nextGame',\n      gameCount: this.state.gameCount + 1\n    }));\n  }\n\n  handleCardClick = (e) => {\n    if(this.state.turn == this.state.userId){\n      let next = 0;\n      if(this.state.turn == 4){\n        next = 1;\n      }\n      else{\n        next = this.state.turn + 1;\n      }\n      let index = this.state.cards.indexOf(e.target.value);\n      this.state.cards.splice(index, 1);\n      if(this.state.currentSuit == 'NA'){\n        client.send(JSON.stringify({\n          type: 'firstMove',\n          userId: this.state.userId,\n          move: e.target.value\n        }));\n      }\n      else if(this.state.trump == 'NA' && this.state.currentSuit != e.target.value.substring(0,1)\n                && next == this.state.roundStartsWith){\n        client.send(JSON.stringify({\n          type: 'setTrumpandOver',\n          userId: this.state.userId,\n          move: e.target.value\n        }));\n      }\n      else if(this.state.trump == 'NA' && this.state.currentSuit != e.target.value.substring(0,1)){\n        client.send(JSON.stringify({\n          type: 'setTrump',\n          userId: this.state.userId,\n          move: e.target.value\n        }));\n      }\n      else if(next == this.state.roundStartsWith){\n        client.send(JSON.stringify({\n          type: 'roundOver',\n          userId: this.state.userId,\n          move: e.target.value\n        }));\n      }\n      else{\n        client.send(JSON.stringify({\n          type: 'move',\n          userId: this.state.userId,\n          move: e.target.value\n        }));\n      }\n    }\n  }\n\n  renderCards = () =>{\n    const card = [];\n    const suit = {};\n    for(let i = 0; i < this.state.cards.length; ++i){\n      if(this.state.cards[i].substring(0, 1) == 'D'){\n        suit[i] = 'Diamonds';\n      }\n      else if(this.state.cards[i].substring(0, 1) == 'H'){\n        suit[i] = 'Hearts';\n      }\n      else if(this.state.cards[i].substring(0, 1) == 'C'){\n        suit[i] = 'Clubs';\n      }\n      else if(this.state.cards[i].substring(0, 1) == 'S'){\n        suit[i] = 'Spades';\n      }\n\n      if(this.state.cards[i].substring(1) == '14'){\n        card.push(<button className = {suit[i]} style = {{cursor: 'pointer'}} onClick = {this.handleCardClick} value = {this.state.cards[i]}>\n          A\n        </button>);\n      }\n      else if(this.state.cards[i].substring(1) == '13'){\n        card.push(<button className = {suit[i]} style = {{cursor: 'pointer'}} onClick = {this.handleCardClick} value = {this.state.cards[i]}>\n          K\n        </button>);\n      }\n      else if(this.state.cards[i].substring(1) == '12'){\n        card.push(<button className = {suit[i]} style = {{cursor: 'pointer'}} onClick = {this.handleCardClick} value = {this.state.cards[i]}>\n          Q\n        </button>);\n      }\n      else if(this.state.cards[i].substring(1) == '11'){\n        card.push(<button className = {suit[i]} style = {{cursor: 'pointer'}} onClick = {this.handleCardClick} value = {this.state.cards[i]}>\n          J\n        </button>);\n      }\n      else{\n        card.push(<button className = {suit[i]} style = {{cursor: 'pointer'}} onClick = {this.handleCardClick} value = {this.state.cards[i]}>\n          {this.state.cards[i].substring(1)}\n        </button>);\n      }      \n    }\n    return card;\n  }\n  \n  renderBoard = () => {\n    const board = [];\n    const curr = {1: '', 2: '', 3: '', 4: ''};\n    const card = {1: [], 2: [], 3: [], 4: []};\n    const suit = {1: '', 2: '', 3: '', 4: ''};\n    let currentSuit = 'NA';\n    let trump = 'NA';\n\n    for(let i = 1; i <= 4; ++i){\n      if(this.state.currentRoundMoves[i]){\n        if(this.state.currentRoundMoves[i].substring(0, 1) == 'D'){\n          suit[i] = 'Diamonds';\n        }\n        else if(this.state.currentRoundMoves[i].substring(0, 1) == 'H'){\n          suit[i] = 'Hearts';\n        }\n        else if(this.state.currentRoundMoves[i].substring(0, 1) == 'C'){\n          suit[i] = 'Clubs';\n        }\n        else if(this.state.currentRoundMoves[i].substring(0, 1) == 'S'){\n          suit[i] = 'Spades';\n        }\n\n        if(this.state.currentRoundMoves[i].substring(1) == '14'){\n          card[i].push(<div className = {suit[i]}>\n            A\n          </div>);\n        }\n        else if(this.state.currentRoundMoves[i].substring(1) == '13'){\n          card[i].push(<div className = {suit[i]}>\n            K\n          </div>);\n        }\n        else if(this.state.currentRoundMoves[i].substring(1) == '12'){\n          card[i].push(<div className = {suit[i]}>\n            Q\n          </div>);\n        }\n        else if(this.state.currentRoundMoves[i].substring(1) == '11'){\n          card[i].push(<div className = {suit[i]}>\n            J\n          </div>);\n        }\n        else{\n          card[i].push(<div className = {suit[i]}>\n            {this.state.currentRoundMoves[i].substring(1)}\n          </div>);\n        }\n      }\n    }\n\n    if(this.state.currentGameWinner == 1){\n      curr[1] = 'winner';\n      curr[3] = 'winner';\n    }\n    else if(this.state.currentGameWinner == 2){\n      curr[2] = 'winner';\n      curr[4] = 'winner';\n    }\n    else if(this.state.turn == 1){\n      curr[1] = 'current';\n    }\n    else if(this.state.turn == 2){\n      curr[2] = 'current';\n    }\n    else if(this.state.turn == 3){\n      curr[3] = 'current';\n    }\n    else if(this.state.turn == 4){\n      curr[4] = 'current';\n    }\n\n    if(this.state.currentSuit == 'D'){\n      currentSuit = 'Diamonds';\n    }\n    else if(this.state.currentSuit == 'H'){\n      currentSuit = 'Hearts';\n    }\n    else if(this.state.currentSuit == 'C'){\n      currentSuit = 'Clubs';\n    }\n    else if(this.state.currentSuit == 'S'){\n      currentSuit = 'Spades';\n    }\n\n    if(this.state.trump == 'D'){\n      trump = 'Diamonds';\n    }\n    else if(this.state.trump == 'H'){\n      trump = 'Hearts';\n    }\n    else if(this.state.trump == 'C'){\n      trump = 'Clubs';\n    }\n    else if(this.state.trump == 'S'){\n      trump = 'Spades';\n    }\n\n    if(this.state.userId == 1){\n      board.push(<div>\n                    <div className = 'placement1'>\n                      <div className = 'stats'>Your Details: <br /></div>\n                      Player: {this.state.userId} <br />\n                      Name: {this.state.userName} <br />\n                      Your Team: Team{this.state.team}\n                    </div>\n                    <div className = {curr[3] + 'placement2'}>\n                      <div className = 'stats'>Player 3:</div>\n                      {card[3]}\n                    </div>\n                    <div className = 'placement3'>\n                      <div className = 'stats'>This Game Details: <br /></div>\n                      Current Suit: {currentSuit} <br />\n                      Trump: {trump} <br />\n                      {this.state.previousRoundWinner == 0 ?\n                        'Last Hand: NA'\n                        : 'Last Hand: Player' + this.state.previousRoundWinner\n                      }\n                    </div>\n                    <div className = {curr[2] + 'placement4'}>\n                      <div className = 'stats'>Player 2:</div>\n                      {card[2]}\n                    </div>\n                    <div className = 'placement5'>\n                      {this.state.currentGameWinner == 0 ?\n                        <div>\n                          <div className = 'subheader'>\n                            Dehla Pakad\n                          </div>\n                          <div className = 'tagline'>\n                            Game: {this.state.gameCount}\n                          </div>\n                        </div>\n                        : <div>\n                            <div className = 'subheader'>\n                                Dehla Pakad\n                            </div>\n                            <div className = 'tagline' style = {{cursor: 'pointer'}} onClick = {this.handleNextGame}>\n                              Start Next Game\n                            </div>\n                          </div>\n                      }\n                    </div>\n                    <div className = {curr[4] + 'placement6'}>\n                      <div className = 'stats'>Player 4:</div>\n                      {card[4]}\n                    </div>\n                    <div className = 'placement7'>\n                      <div className = 'stats'>Hands Captured so far:<br /></div>\n                      Team 1: {this.state.hands[1].length / 4}<br />\n                      Team 2: {this.state.hands[2].length / 4}\n                    </div>\n                    <div className = {curr[1] + 'placement8'}>\n                      <div className = 'stats'>Player 1:</div>\n                      {card[1]}\n                    </div>\n                    <div className = 'placement9'>\n                      <div className = 'stats'>Total Points: <br /></div>\n                      Team 1: {this.state.team1points} <br /> \n                      Team 2: {this.state.team2points}\n                    </div>\n                  </div>);\n    }\n    else if(this.state.userId == 2){\n      board.push(<div>\n                    <div className = 'placement1'>\n                      <div className = 'stats'>Your Details: <br /></div>\n                      Player: {this.state.userId} <br />\n                      Name: {this.state.userName} <br />\n                      Your Team: Team{this.state.team}\n                    </div>\n                    <div className = {curr[4] + 'placement2'}>\n                      <div className = 'stats'>Player 4:</div>\n                      {card[4]}\n                    </div>\n                    <div className = 'placement3'>\n                      <div className = 'stats'>This Game Details: <br /></div>\n                      Current Suit: {currentSuit} <br />\n                      Trump: {trump} <br />\n                      {this.state.previousRoundWinner == 0 ?\n                        'Last Hand: NA'\n                        : 'Last Hand: Player' + this.state.previousRoundWinner\n                      }\n                    </div>\n                    <div className = {curr[3] + 'placement4'}>\n                      <div className = 'stats'>Player 3:</div>\n                      {card[3]}\n                    </div>\n                    <div className = 'placement5'>\n                      {this.state.currentGameWinner == 0 ?\n                        <div>\n                          <div className = 'subheader'>\n                            Dehla Pakad\n                          </div>\n                          <div className = 'tagline'>\n                            Game: {this.state.gameCount}\n                          </div>\n                        </div>\n                        : <div>\n                            <div className = 'subheader'>\n                                Dehla Pakad\n                            </div>\n                            <div className = 'tagline' style = {{cursor: 'pointer'}} onClick = {this.handleNextGame}>\n                              Start Next Game\n                            </div>\n                          </div>\n                      }\n                    </div>\n                    <div className = {curr[1] + 'placement6'}>\n                      <div className = 'stats'>Player 1:</div>\n                      {card[1]}\n                    </div>\n                    <div className = 'placement7'>\n                      <div className = 'stats'>Hands Captured so far:<br /></div>\n                      Team 1: {this.state.hands[1].length / 4}<br />\n                      Team 2: {this.state.hands[2].length / 4}\n                    </div>\n                    <div className = {curr[2] + 'placement8'}>\n                      <div className = 'stats'>Player 2:</div>\n                      {card[2]}\n                    </div>\n                    <div className = 'placement9'>\n                      <div className = 'stats'>Total Points: <br /></div>\n                      Team 1: {this.state.team1points} <br /> \n                      Team 2: {this.state.team2points}\n                    </div>\n                  </div>);\n    }\n    else if(this.state.userId == 3){\n      board.push(<div>\n                    <div className = 'placement1'>\n                      <div className = 'stats'>Your Details: <br /></div>\n                      Player: {this.state.userId} <br />\n                      Name: {this.state.userName} <br />\n                      Your Team: Team{this.state.team}\n                    </div>\n                    <div className = {curr[1] + 'placement2'}>\n                      <div className = 'stats'>Player 1:</div>\n                      {card[1]}\n                    </div>\n                    <div className = 'placement3'>\n                      <div className = 'stats'>This Game Details: <br /></div>\n                      Current Suit: {currentSuit} <br />\n                      Trump: {trump} <br />\n                      {this.state.previousRoundWinner == 0 ?\n                        'Last Hand: NA'\n                        : 'Last Hand: Player' + this.state.previousRoundWinner\n                      }\n                    </div>\n                    <div className = {curr[4] + 'placement4'}>\n                      <div className = 'stats'>Player 4:</div>\n                      {card[4]}\n                    </div>\n                    <div className = 'placement5'>\n                      {this.state.currentGameWinner == 0 ?\n                        <div>\n                          <div className = 'subheader'>\n                            Dehla Pakad\n                          </div>\n                          <div className = 'tagline'>\n                            Game: {this.state.gameCount}\n                          </div>\n                        </div>\n                        : <div>\n                            <div className = 'subheader'>\n                                Dehla Pakad\n                            </div>\n                            <div className = 'tagline' style = {{cursor: 'pointer'}} onClick = {this.handleNextGame}>\n                              Start Next Game\n                            </div>\n                          </div>\n                      }\n                    </div>\n                    <div className = {curr[2] + 'placement6'}>\n                      <div className = 'stats'>Player 2:</div>\n                      {card[2]}\n                    </div>\n                    <div className = 'placement7'>\n                      <div className = 'stats'>Hands Captured so far:<br /></div>\n                      Team 1: {this.state.hands[1].length / 4}<br />\n                      Team 2: {this.state.hands[2].length / 4}\n                    </div>\n                    <div className = {curr[3] + 'placement8'}>\n                      <div className = 'stats'>Player 3:</div>\n                      {card[3]}\n                    </div>\n                    <div className = 'placement9'>\n                      <div className = 'stats'>Total Points: <br /></div>\n                      Team 1: {this.state.team1points} <br /> \n                      Team 2: {this.state.team2points}\n                    </div>\n                  </div>);\n    }\n    else if(this.state.userId == 4){\n      board.push(<div>\n                    <div className = 'placement1'>\n                      <div className = 'stats'>Your Details: <br /></div>\n                      Player: {this.state.userId} <br />\n                      Name: {this.state.userName} <br />\n                      Your Team: Team{this.state.team}\n                    </div>\n                    <div className = {curr[2] + 'placement2'}>\n                      <div className = 'stats'>Player 2:</div>\n                      {card[2]}\n                    </div>\n                    <div className = 'placement3'>\n                      <div className = 'stats'>This Game Details: <br /></div>\n                      Current Suit: {currentSuit} <br />\n                      Trump: {trump} <br />\n                      {this.state.previousRoundWinner == 0 ?\n                        'Last Hand: NA'\n                        : 'Last Hand: Player' + this.state.previousRoundWinner\n                      }\n                    </div>\n                    <div className = {curr[1] + 'placement4'}>\n                      <div className = 'stats'>Player 1:</div>\n                      {card[1]}\n                    </div>\n                    <div className = 'placement5'>\n                      {this.state.currentGameWinner == 0 ?\n                        <div>\n                          <div className = 'subheader'>\n                            Dehla Pakad\n                          </div>\n                          <div className = 'tagline'>\n                            Game: {this.state.gameCount}\n                          </div>\n                        </div>\n                        : <div>\n                            <div className = 'subheader'>\n                                Dehla Pakad\n                            </div>\n                            <div className = 'tagline' style = {{cursor: 'pointer'}} onClick = {this.handleNextGame}>\n                              Start Next Game\n                            </div>\n                          </div>\n                      }\n                    </div>\n                    <div className = {curr[3] + 'placement6'}>\n                      <div className = 'stats'>Player 3:</div>\n                      {card[3]}\n                    </div>\n                    <div className = 'placement7'>\n                      <div className = 'stats'>Hands Captured so far:<br /></div>\n                      Team 1: {this.state.hands[1].length / 4}<br />\n                      Team 2: {this.state.hands[2].length / 4}\n                    </div>\n                    <div className = {curr[4] + 'placement8'}>\n                      <div className = 'stats'>Player 4:</div>\n                      {card[4]}\n                    </div>\n                    <div className = 'placement9'>\n                      <div className = 'stats'>Total Points: <br /></div>\n                      Team 1: {this.state.team1points} <br /> \n                      Team 2: {this.state.team2points}\n                    </div>\n                  </div>);\n    }\n    board.push(<div className = 'placement10'>\n                  <div className = 'stats'>Your Cards <br /></div>\n                  {this.renderCards()}\n                </div>);\n    return board;\n  }\n\n  calcRoundWinner = () => {\n    let highest = 0;\n    let winner = 0;\n    let Team1hand = this.state.hands[1].slice();\n    let Team2hand = this.state.hands[2].slice();\n    let pile = this.state.pile.slice();\n    \n    if(this.state.currentRoundMoves[1].substring(0,1) == this.state.currentSuit\n        && this.state.currentRoundMoves[2].substring(0,1) == this.state.currentSuit\n        && this.state.currentRoundMoves[3].substring(0,1) == this.state.currentSuit\n        && this.state.currentRoundMoves[4].substring(0,1) == this.state.currentSuit){\n      for(let i = 1; i <=4; ++i){\n        if(parseInt(this.state.currentRoundMoves[i].substring(1)) > parseInt(highest)){\n          highest = this.state.currentRoundMoves[i].substring(1);\n          winner = i;\n        }\n      }\n    }\n    else if(this.state.currentRoundMoves[1].substring(0,1) != this.state.trump\n              && this.state.currentRoundMoves[2].substring(0,1) != this.state.trump\n              && this.state.currentRoundMoves[3].substring(0,1) != this.state.trump\n              && this.state.currentRoundMoves[4].substring(0,1) != this.state.trump){\n      for(let i = 1; i <=4; ++i){\n        if(parseInt(this.state.currentRoundMoves[i].substring(1)) > parseInt(highest)\n            && this.state.currentRoundMoves[i].substring(0,1) == this.state.currentSuit){\n          highest = this.state.currentRoundMoves[i].substring(1);\n          winner = i;\n        }\n      }\n    }\n    else{\n      for(let i = 1; i <=4; ++i){\n        if(parseInt(this.state.currentRoundMoves[i].substring(1)) > parseInt(highest)\n            && this.state.currentRoundMoves[i].substring(0,1) == this.state.trump){\n          highest = this.state.currentRoundMoves[i].substring(1);\n          winner = i;\n        }\n      }\n    }\n\n    for(let i = 1; i <= 4; ++i){\n      pile = pile.concat(this.state.currentRoundMoves[i]);\n    }\n    \n    if(this.state.cards.length == 0){\n      if(winner == 1 || winner == 3){\n        Team1hand = this.state.hands[1].concat(pile);\n      }\n      else{\n        Team2hand = this.state.hands[2].concat(pile);\n      }\n      this.setState({pile: [],\n                      hands: {1: Team1hand, 2: Team2hand},\n                      previousRoundWinner: winner,\n                      turn: winner\n      });\n      this.calcGameWinner();\n    }\n    else{\n      if(winner == this.state.previousRoundWinner){\n        if(winner == 1 || winner == 3){\n          Team1hand = this.state.hands[1].concat(pile);\n        }\n        else{\n          Team2hand = this.state.hands[2].concat(pile);\n        }\n        this.setState({turn: winner,\n                        hands: {1: Team1hand, 2: Team2hand},\n                        previousRoundWinner: 0,\n                        pile: [],\n                        currentRoundMoves: {},\n                        roundStartsWith: winner,\n                        currentSuit: 'NA'\n        });\n      }\n      else{\n        this.setState({turn: winner,\n                        previousRoundWinner: winner,\n                        pile: pile,\n                        currentRoundMoves: {},\n                        roundStartsWith: winner,\n                        currentSuit: 'NA'\n        });\n      }\n    }\n  }\n\n  calcGameWinner = () => {\n    let team1points = 0;\n    let team2points = 0;\n    for(let i = 0; i < this.state.hands[1].length; ++i){\n      if(this.state.hands[1][i].substring(1) == '10'){\n        team1points += 1;\n      }\n    }\n    for(let i = 0; i < this.state.hands[2].length; ++i){\n      if(this.state.hands[2][i].substring(1) == '10'){\n        team2points += 1;\n      }\n    }\n    let temp1 = this.state.team1points;\n    let temp2 = this.state.team2points;\n    if(team1points == 4){\n      temp1 += 3;\n      this.setState({currentGameWinner: 1, team1points: temp1});\n    }\n    else if(team2points == 4){\n      temp2 += 3;\n      this.setState({currentGameWinner: 2, team2points: temp2});\n    }\n    else if(team1points == 3){\n      temp1 += 2;\n      this.setState({currentGameWinner: 1, team1points: temp1});\n    }\n    else if(team2points == 3){\n      temp2 += 2;\n      this.setState({currentGameWinner: 2, team2points: temp2});\n    }\n    else if(team1points == team2points){\n      if(this.state.hands[1].length > this.state.hands[2].length){\n        temp1 += 1;\n        this.setState({currentGameWinner: 1, team1points: temp1});\n      }\n      else if(this.state.hands[1].length < this.state.hands[2].length){\n        temp2 += 1;\n        this.setState({currentGameWinner: 2, team1points: temp2});\n      }\n    }\n  }\n\n  componentDidMount(){\n    client.onopen = () => {\n      console.log('Connected');\n    }\n\n    client.onmessage = (message) => {\n      const dataFromServer = JSON.parse(message.data);\n      if(dataFromServer.type === 'login'){\n        this.setState({userId: dataFromServer.id, isLoggedIn: true});\n      }\n      else if(dataFromServer.type === 'roomFull'){\n        alert('Room Full');\n      }\n      else if(dataFromServer.type === 'teamFull'){\n        alert('Team full, please try other team');\n      }\n      else if(dataFromServer.type === 'ready'){\n        this.setState({readyToStart: true, cards: dataFromServer.cards, turn: 1, roundStartsWith: 1, gameCount: 1});\n      }\n      else if(dataFromServer.type === 'nextGame'){\n        this.setState({cards: dataFromServer.cards,\n                        roundStartsWith: 1,\n                        currentSuit: 'NA',\n                        currentRoundMoves: {},\n                        pile: [],\n                        hands: {1: [], 2: []},\n                        trump: 'NA',\n                        previousRoundWinner: 0,\n                        gameCount: dataFromServer.gameCount,\n                        currentGameWinner: 0});\n        alert('Starting Next Game');\n      }\n      else{\n        const thisRound = this.state.currentRoundMoves;\n        thisRound[dataFromServer.userId] = dataFromServer.move;\n        let next = 0;\n        if(this.state.turn == 4){\n          next = 1;\n        }\n        else{\n          next = this.state.turn + 1;\n        }\n        if(dataFromServer.type === 'firstMove'){\n          this.setState({roundStartsWith: dataFromServer.userId,\n                          turn: next,\n                          currentRoundMoves: thisRound,\n                          currentSuit: dataFromServer.move.substring(0,1)\n                        });\n        }\n        else if(dataFromServer.type === 'setTrump'){\n          this.setState({turn: next,\n                          currentRoundMoves: thisRound,\n                          trump: dataFromServer.move.substring(0,1)\n                        });\n        }\n        else if(dataFromServer.type === 'setTrumpandOver'){\n          this.setState({currentRoundMoves: thisRound,\n                          trump: dataFromServer.move.substring(0,1)\n          });\n          setTimeout(() => {this.calcRoundWinner()}, 2000);\n        }\n        else if(dataFromServer.type === 'roundOver'){\n          this.setState({currentRoundMoves: thisRound\n          });\n          setTimeout(() => {this.calcRoundWinner()}, 2000);\n        }\n        else if(dataFromServer.type === 'move'){\n          this.setState({turn: next,\n                          currentRoundMoves: thisRound\n          });\n        }\n      }\n    }\n  }\n\n  render(){\n    return(\n      <div>\n        {this.state.isLoggedIn ? \n          <div className = 'board'>\n            {this.state.readyToStart ?\n              this.renderBoard()\n              : <div>\n                  <div className = 'placement1' />\n                  <div className = 'placement2' />\n                  <div className = 'placement3' />\n                  <div className = 'placement4' />\n                  <div className = 'placement5' >\n                    <div className = 'subheader'>\n                      Dehla Pakad\n                    </div>\n                    <div className = 'tagline'>\n                      Waiting for Player to Join\n                    </div>\n                  </div>\n                  <div className = 'placement6' />\n                  <div className = 'placement7' />\n                  <div className = 'placement8' />\n                  <div className = 'placement9' />\n                  <div className = 'placement10' />\n                </div>\n            }\n          </div>\n          : <div>\n              <p className = 'header'>Delha Pakad</p>\n              <br />\n              <input className = 'userName' placeholder = 'Enter Username' onChange = {this.handleUName} />\n              <button className = 'login' onClick = {this.handleLogin}>\n                Login\n              </button>\n              <br />\n              <div className = 'selectTeam'>\n                Select Team:\n                <select className = 'team' onChange = {this.handleTeam} >\n                  <option value = '0' hidden disabled selected value>--Select a team--</option>\n                  <option value = '1' >Team 1</option>\n                  <option value = '2' >Team 2</option>\n                </select>\n              </div>\n            </div>\n        }\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <DehlaPakad />, document.getElementById('root')\n);"],"sourceRoot":""}